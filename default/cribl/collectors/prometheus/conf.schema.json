{
  "type": "object",
  "title": "",
  "properties": {
    "dimensionList": {
      "type": "array",
      "title": "Extra Dimensions",
      "minItems": 0,
      "default": ["host","source"],
      "description": "Other dimensions to include in events",
      "dimensions": {
        "type": "string",
        "title": "dimension"
      }
    },
    "username": {
      "type": "string",
      "title": "Username",
      "description": "Optional username for Basic authentication"
    },
    "password": {
      "type": "string",
      "title": "Password",
      "description": "Optional password for Basic authentication",
      "encrypt": true
    },
    "discoveryType": {
      "title": "Discovery Type",
      "type": "string",
      "enum": ["static", "dns", "ec2"],
      "enumNames": ["Static", "DNS", "AWS EC2"],
      "description": "Target discovery mechanism, use static to manually enter a list of targets",
      "default": "static"
    }
  },
  "dependencies": {
    "discoveryType": {
      "oneOf": [
        {
          "required": [ "targetList" ],
          "properties": {
            "discoveryType": { "enum": ["static"] },
            "targetList": {
              "type": "array",
              "title": "Targets",
              "minItems": 1,
              "default": [],
              "description": "List of Prometheus targets to pull metrics from, values can be in URL or host[:port] format. For example: http://localhost:9090/metrics, localhost:9090, or localhost. In the cases where just host[:port] are specified, the endpoint will resolve to 'http://host[:port]/metrics'.",
              "targets": {
                "type": "string",
                "title": "Targets"
              }
            }
          }
        },
        {
          "required": ["nameList","recordType","scrapeProtocol","scrapePath"],
          "properties": {
            "discoveryType": { "enum": ["dns"] },
            "nameList": {
              "type": "array",
              "title": "DNS Names",
              "minItems": 1,
              "default": [],
              "description": "List of DNS names to resolve",
              "names": {
                "type": "string",
                "title": "DNS Names"
              }
            },
            "recordType": {
              "type": "string",
              "title": "Record Type",
              "enum": ["SRV", "A", "AAAA"],
              "description": "DNS Record type to resolve",
              "default": "SRV"
            },
            "scrapeProtocol": {
              "type": "string",
              "title": "Metrics Protocol",
              "enum": ["http", "https"],
              "description": "Protocol to use when collecting metrics",
              "default": "http"
            },
            "scrapePort": {},
            "scrapePath": {
              "type": "string",
              "title": "Metrics Path",
              "description": "Path to use when collecting metrics from discovered targets",
              "default": "/metrics",
              "pattern": "^\/.*"
            }
          },
          "dependencies": {
            "recordType": {
              "oneOf": [
                {
                  "properties": {
                    "recordType": { "enum": ["SRV"] }
                  }
                },
                {
                  "required": ["scrapePort"],
                  "properties": {
                    "recordType": { "enum": ["A"] },
                    "scrapePort": {
                      "type": "number",
                      "title": "Metrics Port",
                      "description": "The port number in the metrics URL for discovered targets.",
                      "minimum": 1,
                      "maximum": 65535,
                      "default": 9090
                    }
                  }
                },
                {
                  "required": ["scrapePort"],
                  "properties": {
                    "recordType": { "enum": ["AAAA"] },
                    "scrapePort": {
                      "type": "number",
                      "title": "Metrics Port",
                      "description": "The port number in the metrics URL for discovered targets.",
                      "minimum": 1,
                      "maximum": 65535,
                      "default": 9090
                    }
                  }
                }
              ]
            }
          }
        },
        {
          "properties": {
            "discoveryType": { "enum": ["ec2"] },
            "usePublicIp": {
              "type": "boolean",
              "title": "Use Public IP",
              "description": "Use public IP address for discovered targets. Set to false if the private IP address should be used.",
              "default": true
            },
            "scrapeProtocol": {
              "type": "string",
              "title": "Metrics Protocol",
              "enum": ["http", "https"],
              "description": "Protocol to use when collecting metrics",
              "default": "http"
            },
            "scrapePort": {
              "type": "number",
              "title": "Metrics Port",
              "description": "The port number in the metrics URL for discovered targets.",
              "minimum": 1,
              "maximum": 65535,
              "default": 9090
            },
            "scrapePath": {
              "type": "string",
              "title": "Metrics Path",
              "description": "Path to use when collecting metrics from discovered targets",
              "default": "/metrics",
              "pattern": "^\/.*"
            },
            "searchFilter": {
              "title": "Search Filter",
              "description": "EC2 Instance Search Filter",
              "type": "array",
              "items": {
                "type": "object",
                "required": ["Name","Values"],
                "properties": {
                  "Name": {
                    "type": "string",
                    "title": "Filter Name",
                    "description": "Search filter attribute name, see: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html for more information. Attributes can be manually entered if not present in the drop down list"

                  },
                  "Values": {
                    "type": "array",
                    "title": "Filter Values",
                    "description": "Search Filter Values",
                    "minItems": 1,
                    "default": [],
                    "items": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              }
            },
            "region": {
              "type": "string",
              "title": "Region",
              "description": "Region from which to retrieve data.",
              "enum": [
                "us-east-2",
                "us-east-1",
                "us-west-1",
                "us-west-2",
                "af-south-1",
                "ap-east-1",
                "ap-south-2",
                "ap-southeast-3",
                "ap-southeast-4",
                "ap-south-1",
                "ap-northeast-3",
                "ap-northeast-2",
                "ap-southeast-1",
                "ap-southeast-2",
                "ap-northeast-1",
                "ca-central-1",
                "ca-west-1",
                "eu-central-1",
                "eu-west-1",
                "eu-west-2",
                "eu-south-1",
                "eu-west-3",
                "eu-south-2",
                "eu-north-1",
                "eu-central-2",
                "il-central-1",
                "me-south-1",
                "me-central-1",
                "sa-east-1",
                "us-gov-east-1",
                "us-gov-west-1"
              ],
              "enumNames": [
                "US East (Ohio)",
                "US East (N. Virginia)",
                "US West (N. California)",
                "US West (Oregon)",
                "Africa (Cape Town)",
                "Asia Pacific (Hong Kong)",
                "Asia Pacific (Hyderabad)",
                "Asia Pacific (Jakarta)",
                "Asia Pacific (Melbourne)",
                "Asia Pacific (Mumbai)",
                "Asia Pacific (Osaka)",
                "Asia Pacific (Seoul)",
                "Asia Pacific (Singapore)",
                "Asia Pacific (Sydney)",
                "Asia Pacific (Tokyo)",
                "Canada (Central)",
                "Canada West (Calgary)",
                "Europe (Frankfurt)",
                "Europe (Ireland)",
                "Europe (London)",
                "Europe (Milan)",
                "Europe (Paris)",
                "Europe (Spain)",
                "Europe (Stockholm)",
                "Europe (Zurich)",
                "Israel (Tel Aviv)",
                "Middle East (Bahrain)",
                "Middle East (UAE)",
                "South America (SÃ£o Paulo)",
                "AWS GovCloud (US-East)",
                "AWS GovCloud (US-West)"
              ]
            },
            "awsAuthenticationMethod": {
              "type": "string",
              "title": "Authentication method",
              "description": "AWS authentication method",
              "default": "auto"
            },
            "awsApiKey" : {},
            "awsSecretKey" : {},
            "enableAssumeRole": {
              "type":"boolean",
              "title": "Enable Assume Role",
              "description": "Use Assume Role credentials",
              "default": false
            },
            "assumeRoleArn": {},
            "assumeRoleExternalId": {},
            "durationSeconds": {},
            "endpoint": {
              "type": "string",
              "title": "Endpoint",
              "description": "EC2 service endpoint. If empty, defaults to AWS' Region-specific endpoint. Otherwise, used to point to a EC2-compatible endpoint."
            },
            "signatureVersion": {
              "type": "string",
              "title": "Signature version",
              "description": "Signature version to use for signing EC2 requests",
              "default": "v4",
              "enum": ["v2", "v4"]
            }
          },
          "dependencies": {
            "enableAssumeRole": {
              "oneOf": [
                {
                  "properties": {
                    "enableAssumeRole": {
                      "enum":[false]
                    }
                  }
                },
                {
                  "properties": {
                    "enableAssumeRole": {
                      "enum":[true]
                    },
                    "assumeRoleArn": {
                      "type":"string",
                      "title": "AssumeRole ARN",
                      "description": "Amazon Resource Name (ARN) of the role to assume",
                      "pattern": "^arn:",
                      "minLength": 20
                    },
                    "assumeRoleExternalId": {
                      "type": "string",
                      "title": "External ID",
                      "description": "ExternalId to use when assuming role"
                    },
                    "durationSeconds": {
                      "type": "number",
                      "title": "Duration (seconds)",
                      "description": "Duration of the Assumed Role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).",
                      "minimum": 900,
                      "maximum": 43200,
                      "default": 3600
                    }
                  }
                }
              ]
            },
            "awsAuthenticationMethod": {
              "oneOf": [
                {
                  "properties": {
                    "awsAuthenticationMethod": {
                      "enum":["auto"]
                    }
                  }
                },
                {
                  "required": ["awsApiKey", "awsSecretKey"],
                  "properties": {
                    "awsAuthenticationMethod": {
                      "enum":["manual"]
                    },
                    "awsApiKey": {
                      "type": "string",
                      "title": "API key",
                      "description": "API key"
                    },
                    "awsSecretKey": {
                      "type": "string",
                      "title": "Secret key",
                      "description": "Secret key",
                      "encrypt": true
                    }
                  }
                }
              ]
            }
          }
        }
      ]
    }
  }
}
