exports.name="Chain";exports.version="1.3";exports.cribl_version="3.2.0";exports.disabled=false;exports.handleSignals=true;exports.group="Advanced";exports.asyncTimeout=-1;let logger;let processorId;let signature;let processor;exports.init=async r=>{processorId=r.conf?.processor;signature=`${r.cid}:${r.pid}${r.pipeIdx!=null?":"+r.pipeIdx:""}`;logger=C.util.getLogger("func:chain",{signature,processorId});logger?.info("creating new processor");try{processor=await C.internal.getEventProcessor(processorId)}catch(r){logger.warn("failed to create event processor, function will act as a pass thru",{reason:r});exports.sync=true}if(processor?.isSync){exports.sync=processor?.isSync()}};exports.process=r=>{if(processor==null||processor.isClosed()){return r}const s=processor.process(r);if(exports.sync){let r;s.then((s=>r=s));return r}return s};exports.unload=()=>{logger?.info("closing processor");processor?.close();processor=null};