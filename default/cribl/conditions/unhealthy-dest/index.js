exports.name="Unhealthy Destination";exports.type="metric";exports.category="destinations";let id;let name;let __workerGroup;let timeWindow;let notifyOnResolution;exports.init=e=>{const t=e.conf||{};({id=e.pid,name,__workerGroup,timeWindow,notifyOnResolution}=t);timeWindow=timeWindow||"60s";notifyOnResolution=notifyOnResolution||false};exports.build=()=>{let e=`(_metric === 'health.outputs' && output === '${name}')`;let t=`'Destination ${name} is unhealthy in the last ${timeWindow}'`;let i=`'Destination ${name} is healthy in the last ${timeWindow}'`;if(__workerGroup){e=`${e} && __worker_group === '${__workerGroup}'`;t=`'Destination ${name} in group ${__workerGroup} is unhealthy in the last ${timeWindow}'`;i=`'Destination ${name} in group ${__workerGroup} is healthy in the last ${timeWindow}'`}return{filter:e,pipeline:{conf:{functions:[{id:"aggregation",conf:{timeWindow,aggregations:["perc(95, _value).as(health)"],lagTolerance:"20s",idleTimeLimit:"20s"}},{id:"eval",conf:{add:[{name:"output",value:`'${name}'`},{name:"timewindow",value:`'${timeWindow}'`},{name:"_metric",value:"'health.outputs'"}]}},{id:"eval",filter:"Math.round(health) < 2",conf:{add:[{name:"_raw",value:`${i}`},{name:"status",value:`'OK'`}]}},{id:"eval",filter:"Math.round(health) >= 2",conf:{add:[{name:"_raw",value:`${t}`},{name:"status",value:`'ALARM'`}]}},{id:"notifications",conf:{id,field:"status",deduplicate:notifyOnResolution}},{id:"drop",filter:`!(${notifyOnResolution}) && status === 'OK'`}]}}}};