output: default
groups:
  kPcIuv:
    name: Reduction Examples
    index: 4
    disabled: true
asyncFuncTimeout: 1000
functions:
  - id: regex_extract
    filter: "true"
    disabled: null
    conf:
      source: _raw
      iterations: 100
      overwrite: false
      regexList: []
      regex: /^(?<_KEY_0>\w+)=(?<_VALUE_0>.+)/gm
  - id: mask
    filter: "true"
    disabled: false
    conf:
      rules:
        - matchRegex: /(^(?:.+\n){4})/
          replaceExpr: "''"
      fields:
        - _raw
  - id: event_breaker
    filter: "true"
    disabled: false
    conf:
      existingOrNew: new
      shouldMarkCriblBreaker: true
      ruleType: header
      maxEventBytes: 51200
      timestampAnchorRegex: /^/
      timestamp:
        type: auto
        length: 150
      timestampTimezone: local
      timestampEarliest: -420weeks
      timestampLatest: +1week
      delimiterRegex: /\t/
      fieldsLineRegex: /(.+)/
      headerLineRegex: /instance/
      nullFieldVal: "-"
      cleanFields: true
      eventBreakerRegex: /[\n\r]+(?!\s)/
      existingRule: ""
  - id: numerify
    filter: "true"
    disabled: false
    conf:
      format: none
      ignoreFields: []
      filterExpr: ""
      digits: 0
  - id: drop
    filter: Page_Writes_sec==0
    disabled: true
    conf: {}
    groupId: kPcIuv
    description: Drop via Filter
  - id: suppress
    filter: "true"
    disabled: true
    conf:
      allow: 1
      suppressPeriodSec: 120
      dropEventsMode: true
      maxCacheSize: 50000
      cacheIdleTimeoutPeriods: 2
      numEventsIdleTimeoutTrigger: 10000
      keyExpr: "`${host}:${instance}`"
    groupId: kPcIuv
    description: Time based suppression
  - id: sampling
    filter: "true"
    disabled: true
    conf:
      rules:
        - filter: IO_Data_Operations_sec==0
          rate: 250
        - filter: Interrupts_sec==0
          rate: 250
    groupId: kPcIuv
    description: Event sampling
  - id: aggregation
    filter: "true"
    disabled: true
    conf:
      passthrough: false
      preserveGroupBys: true
      sufficientStatsOnly: false
      metricsMode: true
      timeWindow: 120s
      aggregations:
        - max(Handle_Count).as(Max_Handle_Count)
        - avg(Interrupts_sec).as(Avg_Interrupts_sec)
      cumulative: false
      flushOnInputClose: true
      groupbys:
        - host
        - instance
      add:
        - name: index
          value: "'My_New_Perfmon_Metrics_Index'"
    description: Passthru - Metrics at the end
    groupId: kPcIuv
