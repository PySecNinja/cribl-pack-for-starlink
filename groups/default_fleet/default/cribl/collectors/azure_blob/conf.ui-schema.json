{
  "outputName": {
    "ui:widget": "OutputName",
    "ui:forceRender": true,
    "ui:options": {
      "outputType": "azure_blob",
      "outputProps": {
        "containerName": "containerName",
        "connectionString": "connectionString",
        "authType": "authType",
        "textSecret": "textSecret",
        "clientTextSecret": "textSecret",
        "storageAccountName": "storageAccountName",
        "tenantId": "tenantId",
        "clientId": "clientId",
        "certificate": "certificate",
        "path": [
          "destPath",
          {
            "id": "partitionExpr",
            "expression": true
          }
        ]
      }
    }
  },
  "extractors": {
    "ui:widget": "Table",
    "items": {
      "key": {
        "ui:options": { "columnWidth": "30%" },
        "ui:placeholder": "Enter extractor token"
      },
      "expression": {
        "ui:widget": "JsInputWithoutPopup",
        "ui:options": { "columnWidth": "70%" },
        "ui:placeholder": "Enter extractor expression"
      }
    }
  },
  "recurse": {
    "ui:options": { "inline": true, "width": "20%" }
  },
  "path": {
    "ui:options": "{extraDescription: collector && collector.conf && !collector.conf.path ? [{content: 'Caution: If a path is not set, all contents of the specified Blob container will be collected.', alertProps: {type: 'warning', showIcon: true}}] : []}"
  },
  "includeMetadata": {
    "ui:options": { "inline": true, "width": "25%" }
  },
  "includeTags": {
    "ui:options": { "inline": true, "width": "20%" }
  },
  "maxBatchSize": {
    "ui:options": { "inline": false, "width": "30%" }
  },
  "containerName": {
    "ui:placeholder": "Enter Azure blob container name.",
    "ui:widget" : "JsInput"
  },
  "authType": {
    "ui:options": "{ uiEnumOptions: [{value: 'manual', label: 'Manual', description: 'Enter connection string directly' }, { value: 'secret', label: 'Secret', description: 'Select (or create) a stored text secret' }, { value: 'clientSecret', label: 'Client secret', description: 'Select (or create) a stored text secret' }, { value: 'clientCert', label: 'Certificate', description: 'Select (or create) a stored certificate' } ], extraDescription: collector && collector.conf && (collector.conf.authType === 'clientSecret' || collector.conf.authType === 'clientCert') ? [{ content: 'Caution: @{node}s running @{product} version 4.8.1 and older do not support client secret/certificate authentication and will fail to start with this configuration.', alertProps: { type: 'warning', showIcon: true } }] : [] }"
  },
  "connectionString": {
    "ui:placeholder": "Enter Azure blob connection string"
  },
  "textSecret": {
    "ui:widget": "ApiLookupWithCreate",
    "ui:options": {
      "createType": "secret",
      "typeName": "text secret",
      "url": "/system/secrets?type=text",
      "createUrl": "/settings/secrets",
      "valueProp": "id",
      "secretType": "text"
    }
  },
  "clientTextSecret": {
    "ui:widget": "ApiLookupWithCreate",
    "ui:options": {
      "createType": "secret",
      "typeName": "text secret",
      "url": "/system/secrets?type=text",
      "createUrl": "/settings/secrets",
      "valueProp": "id",
      "secretType": "text"
    }
  },
  "certificate": {
    "ui:title": false,
    "certificateName": {
      "ui:widget": "ApiLookupWithCreate",
      "ui:forceRender": true,
      "certProps": ["certPath", "privKeyPath", "passphrase"],
      "ui:options": {
        "url": "/system/certificates",
        "createUrl": "/system/certificates",
        "valueProp": "id",
        "labelProp": "id",
        "createType": "certificate",
        "createLabel": "certificate"
      }
    }
  },
  "ui:options": {
    "groups": {
      "authentication": {
        "title": "Authentication",
        "collapsed": false,
        "properties": [
          "authType", "storageAccountName", "tenantId", "clientId", "connectionString", "textSecret", "clientTextSecret", "certificate"
        ]
      }
    }
  }
}
